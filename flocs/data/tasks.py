"""Tasks generated from data/tasks/*.md
"""
from ..entities import Task

# pylint:disable=line-too-long
tasks = (
    Task(task_id='ladder', category_id='repeat', setting={'actionsLimit': 2, 'energy': 4, 'fields': [[['b', []], ['b', ['A']], ['b', ['M']], ['b', ['A']], ['b', []]], [['k', []], ['k', ['A']], ['k', []], ['k', ['A']], ['k', []]], [['k', []], ['k', ['A']], ['k', ['M']], ['k', ['A']], ['k', []]], [['k', []], ['k', ['A']], ['k', []], ['k', ['A']], ['k', []]], [['k', []], ['k', ['A']], ['k', ['M']], ['k', ['A']], ['k', []]], [['k', []], ['k', ['A']], ['k', []], ['k', ['A']], ['k', []]], [['k', []], ['k', ['A']], ['k', ['M']], ['k', ['A']], ['k', []]], [['k', []], ['k', ['A']], ['k', []], ['k', ['A']], ['k', []]], [['k', []], ['k', ['A']], ['k', ['S']], ['k', ['A']], ['k', []]]]}, solution={'body': [{'location': 1, 'statement': {'test': {'comparator': '!=', 'value': 'b', 'head': 'color'}, 'body': [{'location': 2, 'statement': {'head': 'fly'}}, {'location': 3, 'statement': {'head': 'shoot'}}], 'head': 'while'}}], 'head': 'start'}),
    Task(task_id='diamond-on-right', category_id='moves', setting={'fields': [[['b', []], ['b', ['M']], ['b', []], ['b', []], ['b', []]], [['k', []], ['k', []], ['k', []], ['k', ['A']], ['k', []]], [['k', ['A']], ['k', []], ['k', []], ['k', []], ['k', ['D']]], [['k', []], ['k', ['M']], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', ['S']], ['k', []], ['k', ['M']]]]}, solution={'body': [{'location': 1, 'statement': {'head': 'right'}}, {'location': 2, 'statement': {'head': 'right'}}, {'location': 3, 'statement': {'head': 'fly'}}, {'location': 4, 'statement': {'head': 'fly'}}], 'head': 'start'}),
    Task(task_id='one-step-forward', category_id='moves', setting={'fields': [[['b', []], ['b', []], ['b', []]], [['k', []], ['k', ['S']], ['k', []]]]}, solution={'body': [{'location': 1, 'statement': {'head': 'fly'}}], 'head': 'start'}),
    Task(task_id='turning-left', category_id='moves', setting={'fields': [[['b', ['M']], ['b', []], ['b', []], ['b', ['M']], ['b', []]], [['k', ['A']], ['k', []], ['k', ['M']], ['k', []], ['k', ['A']]], [['k', []], ['k', []], ['k', ['A']], ['k', ['M']], ['k', []]], [['k', ['M']], ['k', []], ['k', ['S']], ['k', []], ['k', ['A']]]]}, solution={'body': [{'location': 1, 'statement': {'head': 'left'}}, {'location': 2, 'statement': {'head': 'fly'}}, {'location': 3, 'statement': {'head': 'fly'}}], 'head': 'start'}),
    Task(task_id='shooting', category_id='world', setting={'fields': [[['b', ['A']], ['b', ['A']], ['b', ['A']], ['b', []], ['b', ['A']]], [['k', ['A']], ['k', []], ['k', ['A']], ['k', ['M']], ['k', ['A']]], [['k', ['A']], ['k', []], ['k', ['A']], ['k', ['M']], ['k', ['A']]], [['k', ['A']], ['k', []], ['k', ['A']], ['k', []], ['k', ['A']]], [['k', ['A']], ['k', []], ['k', []], ['k', []], ['k', ['A']]], [['k', ['A']], ['k', []], ['k', ['S']], ['k', []], ['k', ['A']]]]}, solution={'body': [{'location': 1, 'statement': {'head': 'right'}}, {'location': 2, 'statement': {'head': 'fly'}}, {'location': 3, 'statement': {'head': 'shoot'}}, {'location': 4, 'statement': {'head': 'shoot'}}, {'location': 5, 'statement': {'head': 'fly'}}], 'head': 'start'}),
    Task(task_id='on-yellow-to-left', category_id='if', setting={'actionsLimit': 2, 'fields': [[['b', []], ['b', []], ['b', []], ['b', []], ['b', []]], [['k', []], ['k', ['A']], ['k', ['A']], ['k', ['A']], ['k', ['A']]], [['k', ['A']], ['y', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', ['A']], ['k', ['A']], ['k', ['A']]], [['k', ['A']], ['k', ['A']], ['y', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', ['S']], ['k', []], ['k', []]]]}, solution={'body': [{'location': 1, 'statement': {'test': {'comparator': '!=', 'value': 'b', 'head': 'color'}, 'body': [{'location': 2, 'statement': {'head': 'fly'}}, {'location': 3, 'statement': {'test': {'comparator': '==', 'value': 'y', 'head': 'color'}, 'orelse': None, 'body': [{'location': 4, 'statement': {'head': 'left'}}], 'head': 'if'}}], 'head': 'while'}}], 'head': 'start'}),
    Task(task_id='turning-right-and-left', category_id='moves', setting={'fields': [[['b', []], ['b', ['M']], ['b', []], ['b', ['M']], ['b', ['A']]], [['k', []], ['k', ['A']], ['k', ['A']], ['k', []], ['k', ['M']]], [['k', ['A']], ['k', ['M']], ['k', []], ['k', ['M']], ['k', ['A']]], [['k', ['M']], ['k', []], ['k', ['S']], ['k', ['M']], ['k', []]]]}, solution={'body': [{'location': 1, 'statement': {'head': 'fly'}}, {'location': 2, 'statement': {'head': 'right'}}, {'location': 3, 'statement': {'head': 'left'}}], 'head': 'start'}),
    Task(task_id='three-steps-forward', category_id='moves', setting={'fields': [[['b', []], ['b', []], ['b', []], ['b', []], ['b', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', ['S']], ['k', []], ['k', []]]]}, solution={'body': [{'location': 1, 'statement': {'head': 'fly'}}, {'location': 2, 'statement': {'head': 'fly'}}, {'location': 3, 'statement': {'head': 'fly'}}], 'head': 'start'}),
    Task(task_id='turning-left-and-right', category_id='moves', setting={'fields': [[['b', []], ['b', ['M']], ['b', []], ['b', ['M']], ['b', []]], [['k', ['M']], ['k', ['A']], ['k', []], ['k', ['A']], ['k', []]], [['k', ['A']], ['k', []], ['k', ['A']], ['k', ['M']], ['k', ['A']]], [['k', []], ['k', ['M']], ['k', ['S']], ['k', []], ['k', ['M']]]]}, solution={'body': [{'location': 1, 'statement': {'head': 'left'}}, {'location': 2, 'statement': {'head': 'right'}}, {'location': 3, 'statement': {'head': 'fly'}}], 'head': 'start'}),
    Task(task_id='zig-zag', category_id='loops', setting={'actionsLimit': 2, 'fields': [[['b', []], ['b', []], ['b', []], ['b', []], ['b', []]], [['k', ['A']], ['k', []], ['k', ['A']], ['k', []], ['k', ['A']]], [['k', []], ['k', ['A']], ['k', []], ['k', ['A']], ['k', []]], [['k', ['A']], ['k', []], ['k', ['A']], ['k', []], ['k', ['A']]], [['k', []], ['k', ['A']], ['k', []], ['k', ['A']], ['k', []]], [['k', ['A']], ['k', []], ['k', ['A']], ['k', []], ['k', ['A']]], [['k', []], ['k', ['A']], ['k', []], ['k', ['A']], ['k', []]], [['k', ['A']], ['k', []], ['k', ['A']], ['k', []], ['k', ['A']]], [['k', []], ['k', []], ['k', ['S']], ['k', []], ['k', []]]]}, solution={'body': [{'location': 1, 'statement': {'test': {'comparator': '!=', 'value': 'b', 'head': 'color'}, 'body': [{'location': 2, 'statement': {'head': 'right'}}, {'location': 3, 'statement': {'head': 'left'}}], 'head': 'while'}}], 'head': 'start'}),
    Task(task_id='turning-right', category_id='moves', setting={'fields': [[['b', []], ['b', ['M']], ['b', []], ['b', []], ['b', ['M']]], [['k', ['A']], ['k', []], ['k', ['M']], ['k', []], ['k', ['A']]], [['k', []], ['k', ['M']], ['k', ['A']], ['k', []], ['k', []]], [['k', ['A']], ['k', []], ['k', ['S']], ['k', []], ['k', ['M']]]]}, solution={'body': [{'location': 1, 'statement': {'head': 'right'}}, {'location': 2, 'statement': {'head': 'fly'}}, {'location': 3, 'statement': {'head': 'fly'}}], 'head': 'start'}),
    Task(task_id='shot', category_id='world', setting={'fields': [[['b', []], ['b', ['A']], ['b', []], ['b', ['A']], ['b', []]], [['k', []], ['k', ['A']], ['k', ['M']], ['k', ['A']], ['k', []]], [['k', []], ['k', ['A']], ['k', []], ['k', ['A']], ['k', []]], [['k', []], ['k', ['A']], ['k', ['S']], ['k', ['A']], ['k', []]]]}, solution={'body': [{'location': 1, 'statement': {'head': 'fly'}}, {'location': 2, 'statement': {'head': 'shoot'}}, {'location': 3, 'statement': {'head': 'fly'}}], 'head': 'start'}),
)