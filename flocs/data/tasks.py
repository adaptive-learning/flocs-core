"""Tasks generated from data/tasks/*.md
"""
from ..entities import Task

# pylint:disable=line-too-long
tasks = (
    Task(task_id='direction-change', category_id='while', setting={'fields': [[['b', []], ['b', []], ['b', []], ['b', []], ['b', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', ['A']], ['k', ['A']], ['k', []], ['k', ['A']], ['k', ['A']]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', ['A']], ['k', ['A']], ['k', ['A']], ['k', ['A']], ['y', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', ['S']]]], 'length': 4}, solution={'body': [{'location': 1, 'statement': {'body': [{'location': 2, 'statement': {'head': 'fly'}}], 'head': 'while', 'test': {'head': 'color', 'value': 'y', 'comparator': '!='}}}, {'location': 3, 'statement': {'body': [{'location': 4, 'statement': {'head': 'left'}}], 'head': 'while', 'test': {'head': 'color', 'value': 'b', 'comparator': '!='}}}], 'head': 'start'}),
    Task(task_id='arrow', category_id='loops', setting={'energy': 2, 'fields': [[['b', []], ['b', []], ['b', []], ['b', []], ['b', []]], [['k', ['D']], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', ['M']], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', ['D']], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', ['D']], ['k', []]], [['k', ['W']], ['k', []], ['k', ['A']], ['k', ['A']], ['k', ['M']]], [['k', []], ['k', []], ['k', []], ['k', ['D']], ['k', []]], [['k', []], ['k', []], ['k', ['D']], ['k', []], ['k', []]], [['k', []], ['k', ['D']], ['k', []], ['k', []], ['k', []]], [['k', ['D']], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', ['W']], ['k', []], ['k', []], ['k', []], ['k', ['S']]]]}, solution={'body': [{'location': 1, 'statement': {'head': 'shoot'}}, {'location': 2, 'statement': {'body': [{'location': 3, 'statement': {'head': 'left'}}], 'head': 'repeat', 'count': 3}}, {'location': 4, 'statement': {'head': 'shoot'}}, {'location': 5, 'statement': {'head': 'left'}}, {'location': 6, 'statement': {'body': [{'location': 7, 'statement': {'head': 'fly'}}], 'head': 'repeat', 'count': 2}}, {'location': 8, 'statement': {'body': [{'location': 9, 'statement': {'head': 'right'}}], 'head': 'repeat', 'count': 4}}, {'location': 10, 'statement': {'body': [{'location': 11, 'statement': {'head': 'left'}}], 'head': 'repeat', 'count': 4}}, {'location': 12, 'statement': {'head': 'fly'}}], 'head': 'start'}),
    Task(task_id='diamond-lines', category_id='comparing', setting={'fields': [[['b', []], ['b', []], ['b', []], ['b', []], ['b', ['D']]], [['k', []], ['k', []], ['k', []], ['k', ['D']], ['k', []]], [['k', []], ['k', []], ['k', ['D']], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', ['D']], ['k', []], ['k', []]], [['k', []], ['k', ['D']], ['k', []], ['k', []], ['k', []]], [['k', ['W']], ['k', []], ['k', []], ['k', []], ['k', ['W']]], [['k', []], ['k', []], ['k', []], ['k', ['D']], ['k', []]], [['k', []], ['k', []], ['k', ['D']], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', ['D']], ['k', []], ['k', []]], [['k', []], ['k', ['D']], ['k', []], ['k', []], ['k', []]], [['k', ['S']], ['k', []], ['k', []], ['k', []], ['k', []]]], 'length': 4}, solution={'body': [{'location': 1, 'statement': {'body': [{'location': 2, 'statement': {'body': [{'location': 3, 'statement': {'head': 'fly'}}], 'head': 'if', 'orelse': None, 'test': {'head': 'position', 'value': 3, 'comparator': '=='}}}, {'location': 4, 'statement': {'head': 'right'}}], 'head': 'while', 'test': {'head': 'color', 'value': 'b', 'comparator': '!='}}}], 'head': 'start'}),
    Task(task_id='ladder', category_id='repeat', setting={'energy': 4, 'fields': [[['b', []], ['b', ['A']], ['b', ['M']], ['b', ['A']], ['b', []]], [['k', []], ['k', ['A']], ['k', []], ['k', ['A']], ['k', []]], [['k', []], ['k', ['A']], ['k', ['M']], ['k', ['A']], ['k', []]], [['k', []], ['k', ['A']], ['k', []], ['k', ['A']], ['k', []]], [['k', []], ['k', ['A']], ['k', ['M']], ['k', ['A']], ['k', []]], [['k', []], ['k', ['A']], ['k', []], ['k', ['A']], ['k', []]], [['k', []], ['k', ['A']], ['k', ['M']], ['k', ['A']], ['k', []]], [['k', []], ['k', ['A']], ['k', []], ['k', ['A']], ['k', []]], [['k', []], ['k', ['A']], ['k', ['S']], ['k', ['A']], ['k', []]]], 'length': 3}, solution={'body': [{'location': 1, 'statement': {'body': [{'location': 2, 'statement': {'head': 'fly'}}, {'location': 3, 'statement': {'head': 'shoot'}}], 'head': 'while', 'test': {'head': 'color', 'value': 'b', 'comparator': '!='}}}], 'head': 'start'}),
    Task(task_id='six-diamonds', category_id='final-challenge', setting={'fields': [[['b', []], ['b', []], ['b', []], ['b', []]], [['k', []], ['k', []], ['k', ['W']], ['k', []]], [['k', []], ['k', ['D']], ['k', ['D']], ['k', []]], [['k', []], ['k', ['D']], ['k', ['D']], ['k', []]], [['k', []], ['k', ['D']], ['k', ['D']], ['k', []]], [['k', ['S']], ['k', []], ['k', []], ['k', ['W']]]], 'length': 4}, solution={'body': [{'location': 1, 'statement': {'body': [{'location': 2, 'statement': {'body': [{'location': 3, 'statement': {'head': 'right'}}], 'head': 'if', 'orelse': {'location': 4, 'statement': {'body': [{'location': 5, 'statement': {'head': 'left'}}], 'head': 'else'}}, 'test': {'head': 'position', 'value': 3, 'comparator': '<'}}}], 'head': 'while', 'test': {'head': 'color', 'value': 'b', 'comparator': '!='}}}], 'head': 'start'}),
    Task(task_id='meteoroids-on-left', category_id='final-challenge', setting={'energy': 2, 'fields': [[['b', []], ['b', []], ['b', []], ['b', []], ['b', []]], [['k', ['W']], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', ['M']], ['k', ['M']], ['k', ['A']], ['k', ['A']], ['k', ['A']]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', ['D']], ['k', ['D']], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', ['S']], ['k', ['W']], ['k', []]]], 'length': 10}, solution={'body': [{'location': 1, 'statement': {'body': [{'location': 2, 'statement': {'body': [{'location': 3, 'statement': {'head': 'left'}}], 'head': 'repeat', 'count': 2}}, {'location': 4, 'statement': {'head': 'shoot'}}, {'location': 5, 'statement': {'body': [{'location': 6, 'statement': {'head': 'right'}}], 'head': 'repeat', 'count': 2}}, {'location': 7, 'statement': {'body': [{'location': 8, 'statement': {'head': 'left'}}], 'head': 'repeat', 'count': 2}}, {'location': 9, 'statement': {'head': 'fly'}}], 'head': 'repeat', 'count': 2}}, {'location': 10, 'statement': {'head': 'fly'}}], 'head': 'start'}),
    Task(task_id='double-track', category_id='loops', setting={'fields': [[['b', []], ['b', []], ['b', []], ['b', []], ['b', []], ['b', []]], [['k', ['W']], ['k', ['D']], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', ['D']], ['k', ['D']], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', ['D']], ['k', ['D']], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', ['D']], ['k', ['D']], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', ['D']], ['k', ['D']], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', ['D']], ['k', ['D']], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', ['D']], ['k', ['D']], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', ['D']], ['k', ['D']], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', ['D']], ['k', ['D']]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', ['D']], ['k', ['D']]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', ['D']], ['k', ['D']]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', ['S']], ['k', ['W']]]], 'length': 8}, solution={'body': [{'location': 1, 'statement': {'body': [{'location': 2, 'statement': {'body': [{'location': 3, 'statement': {'body': [{'location': 4, 'statement': {'head': 'fly'}}], 'head': 'repeat', 'count': 3}}, {'location': 5, 'statement': {'body': [{'location': 6, 'statement': {'head': 'left'}}], 'head': 'repeat', 'count': 2}}], 'head': 'repeat', 'count': 2}}, {'location': 7, 'statement': {'head': 'fly'}}], 'head': 'repeat', 'count': 2}}, {'location': 8, 'statement': {'head': 'fly'}}], 'head': 'start'}),
    Task(task_id='diamond-on-right', category_id='moves', setting={'fields': [[['b', []], ['b', ['M']], ['b', []], ['b', []], ['b', []]], [['k', []], ['k', []], ['k', []], ['k', ['A']], ['k', []]], [['k', ['A']], ['k', []], ['k', []], ['k', []], ['k', ['D']]], [['k', []], ['k', ['M']], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', ['S']], ['k', []], ['k', ['M']]]]}, solution={'body': [{'location': 1, 'statement': {'head': 'right'}}, {'location': 2, 'statement': {'head': 'right'}}, {'location': 3, 'statement': {'head': 'fly'}}, {'location': 4, 'statement': {'head': 'fly'}}], 'head': 'start'}),
    Task(task_id='one-step-forward', category_id='moves', setting={'fields': [[['b', []], ['b', []], ['b', []]], [['k', []], ['k', ['S']], ['k', []]]]}, solution={'body': [{'location': 1, 'statement': {'head': 'fly'}}], 'head': 'start'}),
    Task(task_id='diamond-cross', category_id='loops', setting={'fields': [[['b', []], ['b', []], ['b', []], ['b', []], ['b', []]], [['k', ['W']], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', ['D']], ['k', []], ['k', ['D']], ['k', []]], [['k', []], ['k', []], ['k', ['D']], ['k', []], ['k', []]], [['k', []], ['k', ['D']], ['k', []], ['k', ['D']], ['k', []]], [['k', ['W']], ['k', []], ['k', []], ['k', []], ['k', ['S']]]], 'length': 5}, solution={'body': [{'location': 1, 'statement': {'body': [{'location': 2, 'statement': {'head': 'left'}}], 'head': 'repeat', 'count': 4}}, {'location': 3, 'statement': {'body': [{'location': 4, 'statement': {'head': 'right'}}], 'head': 'repeat', 'count': 4}}, {'location': 5, 'statement': {'head': 'fly'}}], 'head': 'start'}),
    Task(task_id='diamonds-with-signals', category_id='if', setting={'fields': [[['b', []], ['b', []], ['b', []], ['b', []], ['b', ['A']]], [['k', []], ['k', []], ['k', []], ['k', ['D']], ['k', ['A']]], [['k', []], ['k', []], ['y', []], ['k', []], ['k', ['A']]], [['k', []], ['k', []], ['k', []], ['k', ['A']], ['k', ['A']]], [['k', []], ['k', []], ['k', []], ['k', ['D']], ['k', ['A']]], [['k', []], ['k', []], ['y', []], ['k', []], ['k', ['A']]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', ['A']]], [['k', []], ['k', []], ['k', []], ['k', ['A']], ['k', ['A']]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', ['A']]], [['k', []], ['k', []], ['k', []], ['k', ['D']], ['k', ['A']]], [['k', []], ['k', []], ['y', []], ['k', []], ['k', ['A']]], [['k', []], ['k', []], ['k', ['S']], ['k', []], ['k', ['A']]]], 'length': 5}, solution={'body': [{'location': 1, 'statement': {'body': [{'location': 2, 'statement': {'head': 'fly'}}, {'location': 3, 'statement': {'body': [{'location': 4, 'statement': {'head': 'right'}}, {'location': 5, 'statement': {'head': 'left'}}], 'head': 'if', 'orelse': None, 'test': {'head': 'color', 'value': 'y', 'comparator': '=='}}}], 'head': 'while', 'test': {'head': 'color', 'value': 'b', 'comparator': '!='}}}], 'head': 'start'}),
    Task(task_id='n', category_id='repeat', setting={'fields': [[['b', []], ['b', []], ['b', []], ['b', []], ['b', []]], [['k', ['W', 'D']], ['k', []], ['k', []], ['k', []], ['k', ['D']]], [['k', ['D']], ['k', ['X', 'D']], ['k', []], ['k', []], ['k', ['D']]], [['k', ['D']], ['k', []], ['k', ['D']], ['k', []], ['k', ['D']]], [['k', ['D']], ['k', []], ['k', []], ['k', ['D']], ['k', ['X', 'D']]], [['k', ['S']], ['k', []], ['k', []], ['k', []], ['k', ['W', 'D']]]], 'length': 6}, solution={'body': [{'location': 1, 'statement': {'body': [{'location': 2, 'statement': {'head': 'fly'}}], 'head': 'repeat', 'count': 4}}, {'location': 3, 'statement': {'body': [{'location': 4, 'statement': {'head': 'left'}}], 'head': 'repeat', 'count': 3}}, {'location': 5, 'statement': {'body': [{'location': 6, 'statement': {'head': 'fly'}}], 'head': 'repeat', 'count': 4}}], 'head': 'start'}),
    Task(task_id='narrow-passage', category_id='if-else', setting={'fields': [[['b', []], ['b', []], ['b', []], ['b', []], ['b', []]], [['k', ['A']], ['k', ['A']], ['k', ['A']], ['k', ['A']], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', ['A']], ['k', ['A']], ['k', ['A']], ['k', ['A']], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', ['W']]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', ['W']], ['k', []], ['k', []], ['k', []]], [['k', ['A']], ['k', ['A']], ['k', ['A']], ['k', ['A']], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', ['S']], ['k', []], ['k', []], ['k', []], ['k', []]]], 'length': 4}, solution={'body': [{'location': 1, 'statement': {'body': [{'location': 2, 'statement': {'body': [{'location': 3, 'statement': {'head': 'right'}}], 'head': 'if', 'orelse': {'location': 4, 'statement': {'body': [{'location': 5, 'statement': {'head': 'fly'}}], 'head': 'else'}}, 'test': {'head': 'position', 'value': 5, 'comparator': '<'}}}], 'head': 'while', 'test': {'head': 'color', 'value': 'b', 'comparator': '!='}}}], 'head': 'start'}),
    Task(task_id='meteoroids-and-wormholes', category_id='comparing', setting={'fields': [[['b', []], ['b', []], ['b', []], ['b', []], ['b', []]], [['k', []], ['k', []], ['k', []], ['k', ['A']], ['k', ['M']]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', ['D']]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', ['Y']]], [['k', []], ['k', []], ['k', ['Y']], ['k', ['A']], ['k', ['M']]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', ['D']]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', ['X']]], [['k', []], ['k', []], ['k', []], ['k', ['A']], ['k', ['M']]], [['k', []], ['k', ['X']], ['k', []], ['k', []], ['k', ['D']]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', ['W']]], [['k', []], ['k', []], ['k', []], ['k', ['A']], ['k', ['M']]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', ['D']]], [['k', ['W']], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', ['S']], ['k', []], ['k', []]]], 'length': 5}, solution={'body': [{'location': 1, 'statement': {'body': [{'location': 2, 'statement': {'body': [{'location': 3, 'statement': {'head': 'right'}}], 'head': 'while', 'test': {'head': 'position', 'value': 5, 'comparator': '<'}}}, {'location': 4, 'statement': {'head': 'shoot'}}, {'location': 5, 'statement': {'head': 'fly'}}], 'head': 'while', 'test': {'head': 'color', 'value': 'b', 'comparator': '!='}}}], 'head': 'start'}),
    Task(task_id='diamonds-on-yellow', category_id='if-else', setting={'fields': [[['b', []], ['b', []], ['b', []], ['b', []], ['b', []]], [['k', []], ['y', ['D']], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['y', ['D']], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['y', ['D']], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['y', ['D']], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['y', ['D']], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['y', ['D']], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['y', ['S']], ['k', []]]], 'length': 4}, solution={'body': [{'location': 1, 'statement': {'body': [{'location': 2, 'statement': {'body': [{'location': 3, 'statement': {'head': 'left'}}], 'head': 'if', 'orelse': {'location': 4, 'statement': {'body': [{'location': 5, 'statement': {'head': 'right'}}], 'head': 'else'}}, 'test': {'head': 'color', 'value': 'y', 'comparator': '=='}}}], 'head': 'while', 'test': {'head': 'color', 'value': 'b', 'comparator': '!='}}}], 'head': 'start'}),
    Task(task_id='turning-left', category_id='moves', setting={'fields': [[['b', ['M']], ['b', []], ['b', []], ['b', ['M']], ['b', []]], [['k', ['A']], ['k', []], ['k', ['M']], ['k', []], ['k', ['A']]], [['k', []], ['k', []], ['k', ['A']], ['k', ['M']], ['k', []]], [['k', ['M']], ['k', []], ['k', ['S']], ['k', []], ['k', ['A']]]]}, solution={'body': [{'location': 1, 'statement': {'head': 'left'}}, {'location': 2, 'statement': {'head': 'fly'}}, {'location': 3, 'statement': {'head': 'fly'}}], 'head': 'start'}),
    Task(task_id='red-shooting', category_id='if', setting={'energy': 2, 'fields': [[['b', []], ['b', []], ['b', []], ['b', []], ['b', []], ['b', []]], [['k', ['A']], ['k', ['A']], ['k', ['A']], ['k', ['A']], ['k', ['A']], ['k', ['M']]], [['k', []], ['k', []], ['k', ['W']], ['k', []], ['k', []], ['k', []]], [['k', []], ['y', []], ['k', []], ['k', []], ['k', []], ['r', []]], [['k', ['M']], ['k', ['M']], ['k', ['A']], ['k', []], ['y', []], ['k', []]], [['k', []], ['k', []], ['k', ['A']], ['k', []], ['k', []], ['k', []]], [['k', []], ['r', []], ['k', ['A']], ['y', []], ['k', []], ['k', []]], [['y', []], ['k', []], ['k', ['A']], ['k', []], ['k', []], ['k', []]], [['k', ['S']], ['k', []], ['k', []], ['k', ['W']], ['k', []], ['k', []]]], 'length': 6}, solution={'body': [{'location': 1, 'statement': {'body': [{'location': 2, 'statement': {'body': [{'location': 3, 'statement': {'head': 'right'}}], 'head': 'if', 'orelse': None, 'test': {'head': 'color', 'value': 'y', 'comparator': '=='}}}, {'location': 4, 'statement': {'body': [{'location': 5, 'statement': {'head': 'shoot'}}], 'head': 'if', 'orelse': None, 'test': {'head': 'color', 'value': 'r', 'comparator': '=='}}}, {'location': 6, 'statement': {'head': 'fly'}}], 'head': 'while', 'test': {'head': 'color', 'value': 'b', 'comparator': '!='}}}], 'head': 'start'}),
    Task(task_id='color-slalom', category_id='loops', setting={'fields': [[['b', []], ['b', []], ['b', []], ['b', []], ['b', []]], [['k', []], ['r', ['D']], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['y', ['D']]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['r', ['D']], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['y', ['D']], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', ['S']], ['k', []], ['k', []], ['k', []], ['k', []]]], 'length': 6}, solution={'body': [{'location': 1, 'statement': {'body': [{'location': 2, 'statement': {'body': [{'location': 3, 'statement': {'head': 'right'}}], 'head': 'while', 'test': {'head': 'color', 'value': 'y', 'comparator': '!='}}}, {'location': 4, 'statement': {'body': [{'location': 5, 'statement': {'head': 'left'}}], 'head': 'while', 'test': {'head': 'color', 'value': 'r', 'comparator': '!='}}}], 'head': 'repeat', 'count': 2}}, {'location': 6, 'statement': {'head': 'fly'}}], 'head': 'start'}),
    Task(task_id='cross-2', category_id='final-challenge', setting={'fields': [[['b', []], ['b', []], ['b', []], ['b', []], ['b', []]], [['k', ['D']], ['k', []], ['k', []], ['k', []], ['k', ['W']]], [['k', []], ['k', ['A']], ['k', ['A']], ['k', ['A']], ['k', []]], [['k', []], ['k', ['D']], ['k', []], ['k', ['D']], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', ['D']], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', ['D']], ['k', []], ['k', ['D']], ['k', []]], [['k', []], ['k', ['A']], ['k', ['A']], ['k', ['A']], ['k', []]], [['k', ['S']], ['k', []], ['k', []], ['k', []], ['k', ['W']]]], 'length': 11}, solution={'body': [{'location': 1, 'statement': {'body': [{'location': 2, 'statement': {'body': [{'location': 3, 'statement': {'head': 'fly'}}], 'head': 'if', 'orelse': None, 'test': {'head': 'position', 'value': 4, 'comparator': '!='}}}, {'location': 4, 'statement': {'body': [{'location': 5, 'statement': {'head': 'right'}}], 'head': 'if', 'orelse': None, 'test': {'head': 'position', 'value': 5, 'comparator': '!='}}}], 'head': 'repeat', 'count': 5}}, {'location': 6, 'statement': {'body': [{'location': 7, 'statement': {'body': [{'location': 8, 'statement': {'head': 'fly'}}], 'head': 'if', 'orelse': None, 'test': {'head': 'position', 'value': 2, 'comparator': '!='}}}, {'location': 9, 'statement': {'body': [{'location': 10, 'statement': {'head': 'left'}}], 'head': 'if', 'orelse': None, 'test': {'head': 'position', 'value': 1, 'comparator': '!='}}}], 'head': 'repeat', 'count': 5}}, {'location': 11, 'statement': {'head': 'fly'}}], 'head': 'start'}),
    Task(task_id='diagonal-lines', category_id='final-challenge', setting={'fields': [[['b', []], ['b', []], ['b', ['D']], ['b', []], ['b', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['r', ['D']], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['y', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['y', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['y', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['r', ['D']]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['r', ['D']], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['y', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['r', ['D']], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', ['S']], ['k', []], ['k', []], ['k', []]]], 'length': 9}, solution={'body': [{'location': 1, 'statement': {'body': [{'location': 2, 'statement': {'body': [{'location': 3, 'statement': {'head': 'right'}}, {'location': 4, 'statement': {'body': [{'location': 5, 'statement': {'head': 'left'}}], 'head': 'if', 'orelse': None, 'test': {'head': 'color', 'value': 'r', 'comparator': '=='}}}], 'head': 'if', 'orelse': None, 'test': {'head': 'color', 'value': 'k', 'comparator': '=='}}}, {'location': 6, 'statement': {'body': [{'location': 7, 'statement': {'head': 'left'}}, {'location': 8, 'statement': {'body': [{'location': 9, 'statement': {'head': 'right'}}], 'head': 'if', 'orelse': None, 'test': {'head': 'color', 'value': 'r', 'comparator': '=='}}}], 'head': 'if', 'orelse': None, 'test': {'head': 'color', 'value': 'y', 'comparator': '=='}}}], 'head': 'while', 'test': {'head': 'color', 'value': 'b', 'comparator': '!='}}}], 'head': 'start'}),
    Task(task_id='shooting', category_id='world', setting={'fields': [[['b', ['A']], ['b', ['A']], ['b', ['A']], ['b', []], ['b', ['A']]], [['k', ['A']], ['k', []], ['k', ['A']], ['k', ['M']], ['k', ['A']]], [['k', ['A']], ['k', []], ['k', ['A']], ['k', ['M']], ['k', ['A']]], [['k', ['A']], ['k', []], ['k', ['A']], ['k', []], ['k', ['A']]], [['k', ['A']], ['k', []], ['k', []], ['k', []], ['k', ['A']]], [['k', ['A']], ['k', []], ['k', ['S']], ['k', []], ['k', ['A']]]]}, solution={'body': [{'location': 1, 'statement': {'head': 'right'}}, {'location': 2, 'statement': {'head': 'fly'}}, {'location': 3, 'statement': {'head': 'shoot'}}, {'location': 4, 'statement': {'head': 'shoot'}}, {'location': 5, 'statement': {'head': 'fly'}}], 'head': 'start'}),
    Task(task_id='2diamonds-2meteorids', category_id='world', setting={'fields': [[['b', []], ['b', []], ['b', []], ['b', []], ['b', []]], [['k', ['W']], ['k', ['A']], ['k', ['A']], ['k', []], ['k', []]], [['k', []], ['k', ['D']], ['k', ['M']], ['k', ['A']], ['k', ['A']]], [['k', []], ['k', ['D']], ['k', ['M']], ['k', ['A']], ['k', ['A']]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', ['S']], ['k', []], ['k', ['W']]]]}, solution={'body': [{'location': 1, 'statement': {'head': 'shoot'}}, {'location': 2, 'statement': {'head': 'left'}}, {'location': 3, 'statement': {'head': 'fly'}}, {'location': 4, 'statement': {'head': 'left'}}, {'location': 5, 'statement': {'head': 'left'}}, {'location': 6, 'statement': {'head': 'left'}}, {'location': 7, 'statement': {'head': 'shoot'}}, {'location': 8, 'statement': {'head': 'right'}}, {'location': 9, 'statement': {'head': 'fly'}}], 'head': 'start'}),
    Task(task_id='two-diamonds', category_id='if', setting={'fields': [[['b', []], ['b', []], ['b', []], ['b', []]], [['k', ['A']], ['k', ['A']], ['k', []], ['k', ['A']]], [['k', ['W']], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []]], [['k', ['D']], ['k', []], ['k', ['D']], ['k', []]], [['k', ['M']], ['y', []], ['k', ['M']], ['y', []]], [['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', ['W']]], [['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', ['S']], ['k', []], ['k', []]]], 'length': 4}, solution={'body': [{'location': 1, 'statement': {'body': [{'location': 2, 'statement': {'head': 'fly'}}, {'location': 3, 'statement': {'body': [{'location': 4, 'statement': {'head': 'left'}}], 'head': 'if', 'orelse': None, 'test': {'head': 'color', 'value': 'y', 'comparator': '=='}}}], 'head': 'while', 'test': {'head': 'color', 'value': 'b', 'comparator': '!='}}}], 'head': 'start'}),
    Task(task_id='on-yellow-to-left', category_id='if', setting={'fields': [[['b', []], ['b', []], ['b', []], ['b', []], ['b', []]], [['k', []], ['k', ['A']], ['k', ['A']], ['k', ['A']], ['k', ['A']]], [['k', ['A']], ['y', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', ['A']], ['k', ['A']], ['k', ['A']]], [['k', ['A']], ['k', ['A']], ['y', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', ['S']], ['k', []], ['k', []]]], 'length': 4}, solution={'body': [{'location': 1, 'statement': {'body': [{'location': 2, 'statement': {'head': 'fly'}}, {'location': 3, 'statement': {'body': [{'location': 4, 'statement': {'head': 'left'}}], 'head': 'if', 'orelse': None, 'test': {'head': 'color', 'value': 'y', 'comparator': '=='}}}], 'head': 'while', 'test': {'head': 'color', 'value': 'b', 'comparator': '!='}}}], 'head': 'start'}),
    Task(task_id='steal-the-nose', category_id='repeat', setting={'fields': [[['b', []], ['b', []], ['b', []], ['b', []], ['b', []]], [['k', []], ['k', ['W']], ['k', []], ['k', ['W']], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['y', ['D']], ['k', []], ['k', []]], [['r', ['A']], ['k', []], ['k', []], ['k', []], ['r', ['A']]], [['k', []], ['r', ['A']], ['r', ['A']], ['r', ['A']], ['k', []]], [['k', ['S']], ['k', []], ['k', []], ['k', []], ['k', []]]], 'length': 4}, solution={'body': [{'location': 1, 'statement': {'head': 'fly'}}, {'location': 2, 'statement': {'body': [{'location': 3, 'statement': {'head': 'right'}}], 'head': 'repeat', 'count': 4}}, {'location': 4, 'statement': {'head': 'fly'}}], 'head': 'start'}),
    Task(task_id='two-color-tracks', category_id='final-challenge', setting={'fields': [[['b', []], ['b', []], ['b', []], ['b', []], ['b', []], ['b', []]], [['k', []], ['k', ['W']], ['k', []], ['k', []], ['y', []], ['k', []]], [['k', ['D']], ['k', []], ['k', []], ['k', []], ['k', []], ['k', ['D']]], [['k', []], ['y', []], ['k', []], ['k', []], ['r', []], ['k', []]], [['k', []], ['y', []], ['k', []], ['k', []], ['y', []], ['k', []]], [['k', []], ['k', []], ['k', ['D']], ['k', []], ['k', []], ['k', ['D']]], [['k', []], ['r', []], ['k', []], ['k', []], ['r', []], ['k', []]], [['k', []], ['y', []], ['k', []], ['k', []], ['y', []], ['k', []]], [['k', []], ['k', []], ['k', ['D']], ['k', ['D']], ['k', []], ['k', []]], [['k', []], ['r', []], ['k', []], ['k', []], ['y', []], ['k', []]], [['k', []], ['y', []], ['k', []], ['k', []], ['y', []], ['k', []]], [['k', ['D']], ['k', []], ['k', []], ['k', ['D']], ['k', []], ['k', []]], [['k', []], ['y', []], ['k', []], ['k', []], ['y', []], ['k', []]], [['k', []], ['y', []], ['k', []], ['k', []], ['y', []], ['k', []]], [['k', []], ['k', ['S']], ['k', []], ['k', []], ['k', ['W']], ['k', []]]], 'length': 10}, solution={'body': [{'location': 1, 'statement': {'body': [{'location': 2, 'statement': {'head': 'fly'}}, {'location': 3, 'statement': {'body': [{'location': 4, 'statement': {'head': 'fly'}}, {'location': 5, 'statement': {'body': [{'location': 6, 'statement': {'head': 'left'}}, {'location': 7, 'statement': {'head': 'right'}}], 'head': 'if', 'orelse': {'location': 8, 'statement': {'body': [{'location': 9, 'statement': {'head': 'right'}}, {'location': 10, 'statement': {'head': 'left'}}], 'head': 'else'}}, 'test': {'head': 'color', 'value': 'y', 'comparator': '=='}}}], 'head': 'repeat', 'count': 4}}], 'head': 'repeat', 'count': 2}}, {'location': 11, 'statement': {'head': 'fly'}}], 'head': 'start'}),
    Task(task_id='big-slalom', category_id='loops', setting={'fields': [[['b', ['D']], ['b', []], ['b', []], ['b', []]], [['k', []], ['k', ['D']], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', ['D']], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', ['D']]], [['k', []], ['k', []], ['k', ['D']], ['k', []]], [['k', []], ['k', ['D']], ['k', []], ['k', []]], [['k', ['D']], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', ['D']], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', ['D']], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', ['D']]], [['k', []], ['k', []], ['k', ['D']], ['k', []]], [['k', []], ['k', ['D']], ['k', []], ['k', []]], [['k', ['S']], ['k', []], ['k', []], ['k', []]]], 'length': 5}, solution={'body': [{'location': 1, 'statement': {'body': [{'location': 2, 'statement': {'body': [{'location': 3, 'statement': {'head': 'right'}}], 'head': 'repeat', 'count': 3}}, {'location': 4, 'statement': {'body': [{'location': 5, 'statement': {'head': 'left'}}], 'head': 'repeat', 'count': 3}}], 'head': 'repeat', 'count': 2}}], 'head': 'start'}),
    Task(task_id='edge-to-edge', category_id='comparing', setting={'fields': [[['b', []], ['b', []], ['b', []], ['b', []], ['b', []]], [['k', []], ['k', ['D']], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', ['D']], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', ['D']], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', ['D']]], [['k', []], ['k', []], ['k', []], ['k', ['D']], ['k', []]], [['k', []], ['k', ['W']], ['k', ['D']], ['k', []], ['k', []]], [['k', []], ['k', ['D']], ['k', ['D']], ['k', []], ['k', []]], [['k', ['D']], ['k', []], ['k', []], ['k', ['D']], ['k', []]], [['k', []], ['k', ['D']], ['k', []], ['k', []], ['k', ['D']]], [['k', []], ['k', []], ['k', ['D']], ['k', ['D']], ['k', []]], [['k', []], ['k', []], ['k', ['D']], ['k', ['W']], ['k', []]], [['k', []], ['k', ['S']], ['k', []], ['k', []], ['k', []]]], 'length': 5}, solution={'body': [{'location': 1, 'statement': {'body': [{'location': 2, 'statement': {'body': [{'location': 3, 'statement': {'head': 'right'}}], 'head': 'while', 'test': {'head': 'position', 'value': 5, 'comparator': '<'}}}, {'location': 4, 'statement': {'body': [{'location': 5, 'statement': {'head': 'left'}}], 'head': 'while', 'test': {'head': 'position', 'value': 1, 'comparator': '>'}}}], 'head': 'while', 'test': {'head': 'color', 'value': 'b', 'comparator': '!='}}}], 'head': 'start'}),
    Task(task_id='wormhole-cloud', category_id='final-challenge', setting={'fields': [[['b', ['A']], ['b', ['A']], ['b', ['A']], ['b', []], ['b', ['A']]], [['k', ['A']], ['k', ['M']], ['k', ['A']], ['k', ['Z']], ['k', ['A']]], [['k', ['M']], ['k', ['X']], ['k', ['M']], ['k', ['X']], ['k', ['M']]], [['k', ['M']], ['k', ['Z']], ['k', ['X']], ['k', ['Y']], ['k', ['M']]], [['k', ['A']], ['k', ['M']], ['k', ['Y']], ['k', ['W']], ['k', ['X']]], [['k', ['M']], ['k', ['W']], ['k', ['M']], ['k', ['X']], ['k', ['M']]], [['k', ['A']], ['k', ['M']], ['k', ['S']], ['k', ['M']], ['k', ['A']]]], 'length': 3}, solution={'body': [{'location': 1, 'statement': {'body': [{'location': 2, 'statement': {'head': 'left'}}, {'location': 3, 'statement': {'head': 'fly'}}], 'head': 'repeat', 'count': 2}}], 'head': 'start'}),
    Task(task_id='wormhole-demo', category_id='world', setting={'fields': [[['b', []], ['b', []], ['b', []], ['b', []], ['b', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', ['W']], ['k', []], ['k', ['A']], ['k', ['A']], ['k', ['A']]], [['k', ['A']], ['k', ['A']], ['k', ['A']], ['k', []], ['k', ['W']]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', ['S']], ['k', []], ['k', []]]]}, solution={'body': [{'location': 1, 'statement': {'head': 'right'}}, {'location': 2, 'statement': {'head': 'right'}}, {'location': 3, 'statement': {'head': 'fly'}}, {'location': 4, 'statement': {'head': 'fly'}}], 'head': 'start'}),
    Task(task_id='collect-diamonds', category_id='loops', setting={'fields': [[['b', []], ['b', []], ['b', []], ['b', []], ['b', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', ['D']]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', ['D']]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', ['D']]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', ['A']], ['k', ['A']], ['k', []], ['k', ['A']], ['k', ['A']]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', ['D']], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', ['D']], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', ['D']], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', ['S']], ['k', []], ['k', []]]], 'length': 8}, solution={'body': [{'location': 1, 'statement': {'head': 'left'}}, {'location': 2, 'statement': {'head': 'left'}}, {'location': 3, 'statement': {'body': [{'location': 4, 'statement': {'head': 'fly'}}], 'head': 'repeat', 'count': 3}}, {'location': 5, 'statement': {'body': [{'location': 6, 'statement': {'head': 'right'}}], 'head': 'repeat', 'count': 4}}, {'location': 7, 'statement': {'body': [{'location': 8, 'statement': {'head': 'fly'}}], 'head': 'repeat', 'count': 3}}], 'head': 'start'}),
    Task(task_id='diagonal-diamonds', category_id='final-challenge', setting={'fields': [[['b', []], ['b', []], ['b', []], ['b', []], ['b', []], ['b', []]], [['k', []], ['k', []], ['k', []], ['y', ['D']], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', ['W']], ['y', ['D']], ['k', []]], [['k', []], ['k', []], ['y', ['D']], ['k', []], ['k', []], ['y', ['D']]], [['k', []], ['y', ['D']], ['k', []], ['k', []], ['k', []], ['k', []]], [['y', ['D']], ['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', ['S']], ['k', []], ['k', []], ['k', []], ['k', []], ['k', ['W']]]], 'length': 6}, solution={'body': [{'location': 1, 'statement': {'body': [{'location': 2, 'statement': {'body': [{'location': 3, 'statement': {'body': [{'location': 4, 'statement': {'head': 'right'}}], 'head': 'if', 'orelse': {'location': 5, 'statement': {'body': [{'location': 6, 'statement': {'head': 'left'}}], 'head': 'else'}}, 'test': {'head': 'position', 'value': 4, 'comparator': '<'}}}], 'head': 'if', 'orelse': {'location': 7, 'statement': {'body': [{'location': 8, 'statement': {'head': 'fly'}}], 'head': 'else'}}, 'test': {'head': 'color', 'value': 'y', 'comparator': '=='}}}], 'head': 'while', 'test': {'head': 'color', 'value': 'b', 'comparator': '!='}}}], 'head': 'start'}),
    Task(task_id='stairs', category_id='repeat', setting={'fields': [[['b', []], ['b', []], ['b', []], ['b', []], ['b', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', ['D']]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', ['D']]], [['k', []], ['k', []], ['k', []], ['k', ['D']], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', ['D']], ['k', []]], [['k', []], ['k', []], ['k', ['D']], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', ['D']], ['k', []], ['k', []]], [['k', []], ['k', ['D']], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', ['D']], ['k', []], ['k', []], ['k', []]], [['k', ['D']], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', ['D']], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', ['S']], ['k', []], ['k', []], ['k', []], ['k', []]]], 'length': 6}, solution={'body': [{'location': 1, 'statement': {'head': 'fly'}}, {'location': 2, 'statement': {'body': [{'location': 3, 'statement': {'head': 'fly'}}, {'location': 4, 'statement': {'head': 'right'}}], 'head': 'repeat', 'count': 4}}, {'location': 5, 'statement': {'body': [{'location': 6, 'statement': {'head': 'fly'}}], 'head': 'repeat', 'count': 2}}], 'head': 'start'}),
    Task(task_id='tunnel', category_id='world', setting={'fields': [[['b', []], ['b', []], ['b', []], ['b', []], ['b', []]], [['k', ['A']], ['k', ['A']], ['k', ['M']], ['k', ['A']], ['k', ['A']]], [['k', ['A']], ['k', ['A']], ['k', ['M']], ['k', ['A']], ['k', ['A']]], [['k', ['A']], ['k', ['A']], ['k', ['M']], ['k', ['A']], ['k', ['A']]], [['k', []], ['k', ['D']], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', ['D']], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', ['S']], ['k', []], ['k', []]]]}, solution={'body': [{'location': 1, 'statement': {'head': 'shoot'}}, {'location': 2, 'statement': {'head': 'right'}}, {'location': 3, 'statement': {'head': 'left'}}, {'location': 4, 'statement': {'head': 'shoot'}}, {'location': 5, 'statement': {'head': 'left'}}, {'location': 6, 'statement': {'head': 'right'}}, {'location': 7, 'statement': {'head': 'shoot'}}, {'location': 8, 'statement': {'head': 'fly'}}, {'location': 9, 'statement': {'head': 'fly'}}], 'head': 'start'}),
    Task(task_id='triple-steps', category_id='if-else', setting={'fields': [[['b', []], ['b', []], ['b', []], ['b', []], ['b', []], ['b', []]], [['k', []], ['k', []], ['k', []], ['k', ['D']], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', ['D']], ['k', []], ['k', []], ['k', []]], [['k', []], ['y', ['D']], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', ['D']], ['k', []], ['k', []], ['k', ['X']]], [['k', []], ['k', []], ['k', []], ['k', ['D']], ['k', ['D']], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', ['D']], ['k', ['X']], ['k', []]], [['k', ['W']], ['k', []], ['y', ['D']], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', ['D']], ['k', []], ['k', ['D']], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', ['D']], ['k', []], ['k', ['D']], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', ['S']], ['k', []], ['k', ['W']]]], 'length': 6}, solution={'body': [{'location': 1, 'statement': {'body': [{'location': 2, 'statement': {'body': [{'location': 3, 'statement': {'body': [{'location': 4, 'statement': {'head': 'left'}}], 'head': 'repeat', 'count': 3}}], 'head': 'if', 'orelse': {'location': 5, 'statement': {'body': [{'location': 6, 'statement': {'body': [{'location': 7, 'statement': {'head': 'right'}}], 'head': 'repeat', 'count': 3}}], 'head': 'else'}}, 'test': {'head': 'color', 'value': 'y', 'comparator': '!='}}}], 'head': 'repeat', 'count': 5}}], 'head': 'start'}),
    Task(task_id='mirror', category_id='final-challenge', setting={'fields': [[['b', []], ['b', []], ['b', []], ['b', []], ['b', []], ['b', []], ['b', []]], [['k', []], ['k', []], ['k', ['W']], ['k', ['A']], ['k', ['D']], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', ['A']], ['k', []], ['k', []], ['k', []]], [['k', []], ['r', ['D']], ['k', []], ['k', ['A']], ['k', []], ['r', ['D']], ['k', []]], [['k', []], ['k', []], ['y', []], ['k', ['A']], ['y', []], ['k', []], ['k', []]], [['k', []], ['r', ['D']], ['k', []], ['k', ['A']], ['k', []], ['r', ['D']], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', ['A']], ['k', []], ['k', []], ['k', []]], [['r', ['D']], ['k', []], ['k', []], ['k', ['A']], ['k', []], ['k', []], ['r', ['D']]], [['k', []], ['y', []], ['k', []], ['k', ['A']], ['k', []], ['y', []], ['k', []]], [['r', ['D']], ['k', []], ['k', []], ['k', ['A']], ['k', []], ['k', []], ['r', ['D']]], [['k', []], ['y', []], ['k', []], ['k', ['A']], ['k', []], ['y', []], ['k', []]], [['k', []], ['k', []], ['y', []], ['k', ['A']], ['y', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', ['S']], ['k', ['A']], ['k', ['W']], ['k', []], ['k', []]]], 'length': 13}, solution={'body': [{'location': 1, 'statement': {'body': [{'location': 2, 'statement': {'body': [{'location': 3, 'statement': {'body': [{'location': 4, 'statement': {'head': 'left'}}], 'head': 'if', 'orelse': {'location': 5, 'statement': {'body': [{'location': 6, 'statement': {'head': 'right'}}], 'head': 'else'}}, 'test': {'head': 'position', 'value': 4, 'comparator': '<'}}}], 'head': 'if', 'orelse': None, 'test': {'head': 'color', 'value': 'y', 'comparator': '=='}}}, {'location': 7, 'statement': {'body': [{'location': 8, 'statement': {'body': [{'location': 9, 'statement': {'head': 'right'}}], 'head': 'if', 'orelse': {'location': 10, 'statement': {'body': [{'location': 11, 'statement': {'head': 'left'}}], 'head': 'else'}}, 'test': {'head': 'position', 'value': 4, 'comparator': '<'}}}], 'head': 'if', 'orelse': None, 'test': {'head': 'color', 'value': 'r', 'comparator': '=='}}}, {'location': 12, 'statement': {'body': [{'location': 13, 'statement': {'head': 'fly'}}], 'head': 'if', 'orelse': None, 'test': {'head': 'color', 'value': 'k', 'comparator': '=='}}}], 'head': 'while', 'test': {'head': 'color', 'value': 'b', 'comparator': '!='}}}], 'head': 'start'}),
    Task(task_id='turning-right-and-left', category_id='moves', setting={'fields': [[['b', []], ['b', ['M']], ['b', []], ['b', ['M']], ['b', ['A']]], [['k', []], ['k', ['A']], ['k', ['A']], ['k', []], ['k', ['M']]], [['k', ['A']], ['k', ['M']], ['k', []], ['k', ['M']], ['k', ['A']]], [['k', ['M']], ['k', []], ['k', ['S']], ['k', ['M']], ['k', []]]]}, solution={'body': [{'location': 1, 'statement': {'head': 'fly'}}, {'location': 2, 'statement': {'head': 'right'}}, {'location': 3, 'statement': {'head': 'left'}}], 'head': 'start'}),
    Task(task_id='follow-colors', category_id='if', setting={'fields': [[['b', []], ['b', []], ['b', []], ['b', []], ['b', []]], [['k', ['A']], ['k', ['A']], ['k', []], ['k', []], ['k', []]], [['k', []], ['y', []], ['k', ['A']], ['k', ['A']], ['k', []]], [['k', []], ['k', []], ['r', []], ['k', ['A']], ['k', ['A']]], [['k', ['A']], ['k', ['A']], ['k', ['A']], ['r', []], ['k', []]], [['k', []], ['k', []], ['y', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', ['S']], ['k', []], ['k', []]]], 'length': 7}, solution={'body': [{'location': 1, 'statement': {'body': [{'location': 2, 'statement': {'body': [{'location': 3, 'statement': {'head': 'fly'}}], 'head': 'if', 'orelse': None, 'test': {'head': 'color', 'value': 'k', 'comparator': '=='}}}, {'location': 4, 'statement': {'body': [{'location': 5, 'statement': {'head': 'right'}}], 'head': 'if', 'orelse': None, 'test': {'head': 'color', 'value': 'y', 'comparator': '=='}}}, {'location': 6, 'statement': {'body': [{'location': 7, 'statement': {'head': 'left'}}], 'head': 'if', 'orelse': None, 'test': {'head': 'color', 'value': 'r', 'comparator': '=='}}}], 'head': 'while', 'test': {'head': 'color', 'value': 'b', 'comparator': '!='}}}], 'head': 'start'}),
    Task(task_id='plan-your-shooting', category_id='final-challenge', setting={'energy': 5, 'fields': [[['b', ['A']], ['b', ['W']], ['b', ['A']], ['b', ['M']], ['b', ['A']]], [['k', ['A']], ['k', ['D']], ['k', ['A']], ['k', ['D']], ['k', ['A']]], [['k', ['A']], ['k', ['M']], ['k', ['A']], ['k', ['M']], ['k', ['A']]], [['k', ['A']], ['k', ['M']], ['k', ['A']], ['k', ['M']], ['k', ['A']]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', ['S']], ['k', []], ['k', ['W']], ['k', []]]], 'length': 5}, solution={'body': [{'location': 1, 'statement': {'body': [{'location': 2, 'statement': {'body': [{'location': 3, 'statement': {'head': 'fly'}}], 'head': 'repeat', 'count': 3}}, {'location': 4, 'statement': {'head': 'shoot'}}], 'head': 'repeat', 'count': 5}}], 'head': 'start'}),
    Task(task_id='direct-flight-ahead', category_id='while', setting={'fields': [[['b', []], ['b', []], ['b', []], ['b', ['D']], ['b', []]], [['k', []], ['k', ['W']], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', ['D']], ['k', []]], [['k', []], ['k', ['D']], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', ['D']], ['k', []]], [['k', []], ['k', ['D']], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', ['D']], ['k', []]], [['k', []], ['k', ['D']], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', ['D']], ['k', []]], [['k', []], ['k', ['S']], ['k', []], ['k', ['W']], ['k', []]]], 'length': 2}, solution={'body': [{'location': 1, 'statement': {'body': [{'location': 2, 'statement': {'head': 'fly'}}], 'head': 'while', 'test': {'head': 'color', 'value': 'b', 'comparator': '!='}}}], 'head': 'start'}),
    Task(task_id='diamond-ring', category_id='final-challenge', setting={'fields': [[['b', []], ['b', []], ['b', []], ['b', []], ['b', []], ['b', []]], [['k', ['W']], ['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', ['D']], ['k', ['D']], ['k', []], ['k', []]], [['k', []], ['k', ['D']], ['k', []], ['k', []], ['k', ['D']], ['k', []]], [['k', ['D']], ['k', []], ['k', []], ['k', []], ['k', []], ['k', ['D']]], [['k', []], ['k', ['D']], ['k', []], ['k', []], ['k', ['D']], ['k', []]], [['k', []], ['k', []], ['k', ['D']], ['k', ['D']], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', ['S']], ['k', ['W']], ['k', []], ['k', []]]], 'length': 6}, solution={'body': [{'location': 1, 'statement': {'body': [{'location': 2, 'statement': {'body': [{'location': 3, 'statement': {'head': 'left'}}], 'head': 'repeat', 'count': 2}}, {'location': 4, 'statement': {'body': [{'location': 5, 'statement': {'head': 'right'}}], 'head': 'repeat', 'count': 2}}], 'head': 'repeat', 'count': 7}}, {'location': 6, 'statement': {'head': 'fly'}}], 'head': 'start'}),
    Task(task_id='three-steps-forward', category_id='moves', setting={'fields': [[['b', []], ['b', []], ['b', []], ['b', []], ['b', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', ['S']], ['k', []], ['k', []]]]}, solution={'body': [{'location': 1, 'statement': {'head': 'fly'}}, {'location': 2, 'statement': {'head': 'fly'}}, {'location': 3, 'statement': {'head': 'fly'}}], 'head': 'start'}),
    Task(task_id='beware-of-asteroid', category_id='world', setting={'fields': [[['b', ['M']], ['b', []], ['b', ['D']], ['b', []], ['b', []]], [['k', []], ['k', ['M']], ['k', ['A']], ['k', []], ['k', ['A']]], [['k', ['A']], ['k', []], ['k', ['D']], ['k', ['M']], ['k', []]], [['k', []], ['k', []], ['k', ['S']], ['k', []], ['k', ['M']]]]}, solution={'body': [{'location': 1, 'statement': {'head': 'fly'}}, {'location': 2, 'statement': {'head': 'right'}}, {'location': 3, 'statement': {'head': 'left'}}], 'head': 'start'}),
    Task(task_id='yellow-is-not-red', category_id='while', setting={'fields': [[['b', []], ['b', []], ['b', []], ['b', []], ['b', []]], [['k', []], ['k', []], ['k', []], ['k', ['D']], ['k', []]], [['k', []], ['k', []], ['k', []], ['y', []], ['k', []]], [['k', []], ['k', []], ['k', ['D']], ['k', []], ['k', []]], [['k', []], ['k', ['D']], ['k', []], ['k', []], ['k', []]], [['k', ['D']], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['r', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['r', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['r', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['r', ['S']]]], 'length': 6}, solution={'body': [{'location': 1, 'statement': {'body': [{'location': 2, 'statement': {'head': 'left'}}], 'head': 'while', 'test': {'head': 'color', 'value': 'r', 'comparator': '=='}}}, {'location': 3, 'statement': {'body': [{'location': 4, 'statement': {'head': 'right'}}], 'head': 'while', 'test': {'head': 'color', 'value': 'y', 'comparator': '!='}}}, {'location': 5, 'statement': {'head': 'fly'}}, {'location': 6, 'statement': {'head': 'fly'}}], 'head': 'start'}),
    Task(task_id='slalom-position-testing', category_id='comparing', setting={'fields': [[['b', []], ['b', ['D']], ['b', []], ['b', []], ['b', []]], [['k', ['D']], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', ['D']], ['k', []], ['k', []], ['k', []]], [['k', ['D']], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', ['D']], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', ['D']], ['k', []], ['k', []]], [['k', []], ['k', ['D']], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', ['D']], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', ['S']], ['k', []]]], 'length': 5}, solution={'body': [{'location': 1, 'statement': {'body': [{'location': 2, 'statement': {'head': 'left'}}, {'location': 3, 'statement': {'body': [{'location': 4, 'statement': {'head': 'left'}}], 'head': 'if', 'orelse': None, 'test': {'head': 'position', 'value': 1, 'comparator': '>'}}}, {'location': 5, 'statement': {'head': 'right'}}], 'head': 'while', 'test': {'head': 'color', 'value': 'b', 'comparator': '!='}}}], 'head': 'start'}),
    Task(task_id='dont-forget-shot', category_id='world', setting={'fields': [[['b', []], ['b', []], ['b', []], ['b', []], ['b', []]], [['k', []], ['k', ['M']], ['k', ['A']], ['k', ['A']], ['k', ['A']]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', ['D']], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', ['S']], ['k', []], ['k', []]]]}, solution={'body': [{'location': 1, 'statement': {'head': 'left'}}, {'location': 2, 'statement': {'head': 'shoot'}}, {'location': 3, 'statement': {'head': 'right'}}, {'location': 4, 'statement': {'head': 'right'}}, {'location': 5, 'statement': {'head': 'left'}}, {'location': 6, 'statement': {'head': 'left'}}, {'location': 7, 'statement': {'head': 'fly'}}], 'head': 'start'}),
    Task(task_id='zig-zag-plus', category_id='loops', setting={'fields': [[['b', []], ['b', []], ['b', []], ['b', []], ['b', []]], [['k', ['A']], ['k', []], ['k', ['A']], ['k', []], ['k', ['A']]], [['k', []], ['k', ['A']], ['k', []], ['k', ['A']], ['k', []]], [['k', ['A']], ['k', []], ['k', ['A']], ['k', []], ['k', ['A']]], [['k', []], ['k', ['A']], ['k', ['M']], ['k', ['A']], ['k', []]], [['k', ['A']], ['k', []], ['k', ['A']], ['k', []], ['k', ['A']]], [['k', ['M']], ['k', ['A']], ['k', []], ['k', ['A']], ['k', ['M']]], [['k', ['A']], ['k', []], ['k', ['A']], ['k', []], ['k', ['A']]], [['k', []], ['k', ['A']], ['k', []], ['k', ['A']], ['k', []]], [['k', ['A']], ['k', []], ['k', ['A']], ['k', []], ['k', ['A']]], [['k', []], ['k', ['A']], ['k', []], ['k', ['A']], ['k', []]], [['k', ['A']], ['k', []], ['k', ['A']], ['k', []], ['k', ['A']]], [['k', []], ['k', []], ['k', ['S']], ['k', []], ['k', []]]], 'length': 8}, solution={'body': [{'location': 1, 'statement': {'body': [{'location': 2, 'statement': {'head': 'right'}}], 'head': 'repeat', 'count': 2}}, {'location': 3, 'statement': {'body': [{'location': 4, 'statement': {'head': 'left'}}], 'head': 'repeat', 'count': 3}}, {'location': 5, 'statement': {'body': [{'location': 6, 'statement': {'head': 'right'}}], 'head': 'repeat', 'count': 3}}, {'location': 7, 'statement': {'body': [{'location': 8, 'statement': {'head': 'left'}}], 'head': 'repeat', 'count': 5}}], 'head': 'start'}),
    Task(task_id='find-the-path', category_id='repeat', setting={'fields': [[['b', []], ['b', ['A']], ['b', []], ['b', ['A']], ['b', []]], [['k', ['M']], ['k', ['M']], ['k', ['A']], ['k', []], ['k', ['M']]], [['k', ['M']], ['k', []], ['k', ['A']], ['k', []], ['k', ['M']]], [['k', []], ['k', ['A']], ['k', []], ['k', ['A']], ['k', []]], [['k', ['A']], ['k', ['M']], ['k', ['M']], ['k', ['A']], ['k', ['A']]], [['k', []], ['k', []], ['k', ['M']], ['k', []], ['k', []]], [['k', []], ['k', ['A']], ['k', []], ['k', ['A']], ['k', []]], [['k', ['M']], ['k', ['M']], ['k', ['M']], ['k', []], ['k', ['M']]], [['k', ['A']], ['k', []], ['k', ['A']], ['k', ['M']], ['k', ['A']]], [['k', []], ['k', []], ['k', ['S']], ['k', []], ['k', []]]], 'length': 4}, solution={'body': [{'location': 1, 'statement': {'body': [{'location': 2, 'statement': {'head': 'left'}}, {'location': 3, 'statement': {'head': 'shoot'}}, {'location': 4, 'statement': {'head': 'right'}}], 'head': 'repeat', 'count': 3}}], 'head': 'start'}),
    Task(task_id='double-bend', category_id='loops', setting={'fields': [[['b', []], ['b', []], ['b', []], ['b', []], ['b', ['D']]], [['k', []], ['k', []], ['k', []], ['k', ['D']], ['k', ['W']]], [['k', []], ['k', []], ['k', ['D']], ['k', ['D']], ['k', []]], [['k', []], ['k', ['D']], ['k', ['D']], ['k', []], ['k', []]], [['k', ['D']], ['k', ['D']], ['k', []], ['k', []], ['k', []]], [['k', ['D']], ['k', ['D']], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', ['D']], ['k', ['D']], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', ['D']], ['k', ['D']], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', ['D']], ['k', ['W']]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', ['S']]]], 'length': 5}, solution={'body': [{'location': 1, 'statement': {'body': [{'location': 2, 'statement': {'body': [{'location': 3, 'statement': {'head': 'left'}}], 'head': 'repeat', 'count': 4}}, {'location': 4, 'statement': {'body': [{'location': 5, 'statement': {'head': 'right'}}], 'head': 'repeat', 'count': 4}}], 'head': 'repeat', 'count': 2}}], 'head': 'start'}),
    Task(task_id='turning-left-and-right', category_id='moves', setting={'fields': [[['b', []], ['b', ['M']], ['b', []], ['b', ['M']], ['b', []]], [['k', ['M']], ['k', ['A']], ['k', []], ['k', ['A']], ['k', []]], [['k', ['A']], ['k', []], ['k', ['A']], ['k', ['M']], ['k', ['A']]], [['k', []], ['k', ['M']], ['k', ['S']], ['k', []], ['k', ['M']]]]}, solution={'body': [{'location': 1, 'statement': {'head': 'left'}}, {'location': 2, 'statement': {'head': 'right'}}, {'location': 3, 'statement': {'head': 'fly'}}], 'head': 'start'}),
    Task(task_id='two-bit-instructions', category_id='final-challenge', setting={'energy': 2, 'fields': [[['b', []], ['b', []], ['b', []], ['b', []], ['b', []], ['b', []]], [['k', ['A']], ['k', ['W']], ['k', ['A']], ['k', ['A']], ['k', ['M']], ['k', ['A']]], [['k', ['A']], ['k', ['D']], ['k', ['A']], ['k', ['A']], ['k', ['M']], ['k', ['A']]], [['k', []], ['k', []], ['y', ['D']], ['k', []], ['r', []], ['k', []]], [['k', []], ['k', []], ['y', []], ['k', []], ['k', []], ['y', ['D']]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []], ['y', []]], [['k', []], ['r', ['D']], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['y', []], ['k', []], ['k', []], ['r', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['y', []], ['k', []]], [['r', ['D']], ['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['y', []], ['k', []], ['k', []], ['k', []], ['r', []], ['k', []]], [['k', ['S']], ['k', []], ['k', []], ['k', []], ['k', ['W']], ['k', []]]], 'length': 10}, solution={'body': [{'location': 1, 'statement': {'body': [{'location': 2, 'statement': {'body': [{'location': 3, 'statement': {'head': 'fly'}}, {'location': 4, 'statement': {'body': [{'location': 5, 'statement': {'head': 'left'}}], 'head': 'if', 'orelse': {'location': 6, 'statement': {'body': [{'location': 7, 'statement': {'head': 'right'}}], 'head': 'else'}}, 'test': {'head': 'color', 'value': 'y', 'comparator': '=='}}}], 'head': 'if', 'orelse': {'location': 8, 'statement': {'body': [{'location': 9, 'statement': {'body': [{'location': 10, 'statement': {'head': 'shoot'}}], 'head': 'if', 'orelse': {'location': 11, 'statement': {'body': [{'location': 12, 'statement': {'head': 'fly'}}], 'head': 'else'}}, 'test': {'head': 'color', 'value': 'r', 'comparator': '=='}}}], 'head': 'else'}}, 'test': {'head': 'color', 'value': 'y', 'comparator': '=='}}}], 'head': 'while', 'test': {'head': 'color', 'value': 'b', 'comparator': '!='}}}], 'head': 'start'}),
    Task(task_id='clean-your-path', category_id='repeat', setting={'fields': [[['b', []], ['b', []], ['b', []], ['b', []], ['b', []], ['b', []], ['b', []]], [['k', ['W']], ['k', ['M']], ['k', ['A']], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', ['M']], ['k', ['A']], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', ['M']], ['k', ['A']], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', ['M']], ['k', ['A']], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []], ['k', ['M']], ['k', ['A']]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []], ['k', []], ['k', ['D']]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []], ['k', []], ['k', ['W']]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []], ['k', ['S']], ['k', []]]], 'length': 7}, solution={'body': [{'location': 1, 'statement': {'body': [{'location': 2, 'statement': {'head': 'shoot'}}, {'location': 3, 'statement': {'head': 'left'}}], 'head': 'repeat', 'count': 5}}, {'location': 4, 'statement': {'head': 'fly'}}, {'location': 5, 'statement': {'body': [{'location': 6, 'statement': {'head': 'left'}}], 'head': 'repeat', 'count': 6}}], 'head': 'start'}),
    Task(task_id='zig-zag', category_id='while', setting={'fields': [[['b', []], ['b', []], ['b', []], ['b', []], ['b', []]], [['k', ['A']], ['k', []], ['k', ['A']], ['k', []], ['k', ['A']]], [['k', []], ['k', ['A']], ['k', []], ['k', ['A']], ['k', []]], [['k', ['A']], ['k', []], ['k', ['A']], ['k', []], ['k', ['A']]], [['k', []], ['k', ['A']], ['k', []], ['k', ['A']], ['k', []]], [['k', ['A']], ['k', []], ['k', ['A']], ['k', []], ['k', ['A']]], [['k', []], ['k', ['A']], ['k', []], ['k', ['A']], ['k', []]], [['k', ['A']], ['k', []], ['k', ['A']], ['k', []], ['k', ['A']]], [['k', []], ['k', []], ['k', ['S']], ['k', []], ['k', []]]], 'length': 3}, solution={'body': [{'location': 1, 'statement': {'body': [{'location': 2, 'statement': {'head': 'right'}}, {'location': 3, 'statement': {'head': 'left'}}], 'head': 'while', 'test': {'head': 'color', 'value': 'b', 'comparator': '!='}}}], 'head': 'start'}),
    Task(task_id='color-navigation', category_id='if-else', setting={'fields': [[['b', []], ['b', []], ['b', []], ['b', []], ['b', []]], [['k', ['D']], ['k', []], ['k', []], ['k', ['W']], ['k', []]], [['k', []], ['y', ['D']], ['k', []], ['k', ['D']], ['k', []]], [['k', []], ['k', ['D']], ['k', []], ['k', ['D']], ['k', []]], [['r', ['D']], ['k', []], ['k', []], ['k', []], ['y', ['D']]], [['k', []], ['y', ['D']], ['k', []], ['r', ['D']], ['k', []]], [['k', []], ['k', ['D']], ['k', []], ['k', ['D']], ['k', []]], [['k', []], ['k', ['D']], ['r', ['D']], ['k', []], ['k', []]], [['r', ['D']], ['k', []], ['k', ['D']], ['k', []], ['k', []]], [['k', ['D']], ['k', []], ['k', ['D']], ['k', []], ['k', []]], [['k', ['W']], ['k', []], ['k', ['S']], ['k', []], ['k', []]]], 'length': 6}, solution={'body': [{'location': 1, 'statement': {'body': [{'location': 2, 'statement': {'body': [{'location': 3, 'statement': {'head': 'fly'}}], 'head': 'if', 'orelse': {'location': 4, 'statement': {'body': [{'location': 5, 'statement': {'body': [{'location': 6, 'statement': {'head': 'left'}}], 'head': 'if', 'orelse': {'location': 7, 'statement': {'body': [{'location': 8, 'statement': {'head': 'right'}}], 'head': 'else'}}, 'test': {'head': 'color', 'value': 'y', 'comparator': '=='}}}], 'head': 'else'}}, 'test': {'head': 'color', 'value': 'k', 'comparator': '=='}}}], 'head': 'while', 'test': {'head': 'color', 'value': 'b', 'comparator': '!='}}}], 'head': 'start'}),
    Task(task_id='turning-right', category_id='moves', setting={'fields': [[['b', []], ['b', ['M']], ['b', []], ['b', []], ['b', ['M']]], [['k', ['A']], ['k', []], ['k', ['M']], ['k', []], ['k', ['A']]], [['k', []], ['k', ['M']], ['k', ['A']], ['k', []], ['k', []]], [['k', ['A']], ['k', []], ['k', ['S']], ['k', []], ['k', ['M']]]]}, solution={'body': [{'location': 1, 'statement': {'head': 'right'}}, {'location': 2, 'statement': {'head': 'fly'}}, {'location': 3, 'statement': {'head': 'fly'}}], 'head': 'start'}),
    Task(task_id='yellow-hint', category_id='while', setting={'fields': [[['b', []], ['b', []], ['b', []], ['b', []], ['b', []]], [['k', []], ['k', []], ['k', []], ['k', ['D']], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', ['D']], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', ['D']], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', ['D']], ['k', []]], [['k', []], ['k', []], ['y', ['D']], ['k', []], ['k', []]], [['k', []], ['y', ['D']], ['k', []], ['k', []], ['k', []]], [['y', ['S']], ['k', []], ['k', []], ['k', []], ['k', []]]], 'length': 4}, solution={'body': [{'location': 1, 'statement': {'body': [{'location': 2, 'statement': {'head': 'right'}}], 'head': 'while', 'test': {'head': 'color', 'value': 'y', 'comparator': '=='}}}, {'location': 3, 'statement': {'body': [{'location': 4, 'statement': {'head': 'fly'}}], 'head': 'while', 'test': {'head': 'color', 'value': 'b', 'comparator': '!='}}}], 'head': 'start'}),
    Task(task_id='shot', category_id='world', setting={'fields': [[['b', []], ['b', ['A']], ['b', []], ['b', ['A']], ['b', []]], [['k', []], ['k', ['A']], ['k', ['M']], ['k', ['A']], ['k', []]], [['k', []], ['k', ['A']], ['k', []], ['k', ['A']], ['k', []]], [['k', []], ['k', ['A']], ['k', ['S']], ['k', ['A']], ['k', []]]]}, solution={'body': [{'location': 1, 'statement': {'head': 'fly'}}, {'location': 2, 'statement': {'head': 'shoot'}}, {'location': 3, 'statement': {'head': 'fly'}}], 'head': 'start'}),
)