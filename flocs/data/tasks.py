"""Tasks generated from data/tasks/*.md
"""
from ..entities import Task

# pylint:disable=line-too-long
TASKS = (
    Task(task_id='ladder', setting={'actionsLimit': 2, 'energy': 4, 'fields': [[['b', []], ['b', ['A']], ['b', ['M']], ['b', ['A']], ['b', []]], [['k', []], ['k', ['A']], ['k', []], ['k', ['A']], ['k', []]], [['k', []], ['k', ['A']], ['k', ['M']], ['k', ['A']], ['k', []]], [['k', []], ['k', ['A']], ['k', []], ['k', ['A']], ['k', []]], [['k', []], ['k', ['A']], ['k', ['M']], ['k', ['A']], ['k', []]], [['k', []], ['k', ['A']], ['k', []], ['k', ['A']], ['k', []]], [['k', []], ['k', ['A']], ['k', ['M']], ['k', ['A']], ['k', []]], [['k', []], ['k', ['A']], ['k', []], ['k', ['A']], ['k', []]], [['k', []], ['k', ['A']], ['k', ['S']], ['k', ['A']], ['k', []]]]}, solution={'head': 'start', 'body': [{'statement': {'head': 'while', 'body': [{'statement': {'head': 'fly'}, 'location': 2}, {'statement': {'head': 'shoot'}, 'location': 3}], 'test': {'head': 'color', 'comparator': '!=', 'value': 'b'}}, 'location': 1}]}),
    Task(task_id='diamond-on-right', setting={'fields': [[['b', []], ['b', ['M']], ['b', []], ['b', []], ['b', []]], [['k', []], ['k', []], ['k', []], ['k', ['A']], ['k', []]], [['k', ['A']], ['k', []], ['k', []], ['k', []], ['k', ['D']]], [['k', []], ['k', ['M']], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', ['S']], ['k', []], ['k', ['M']]]]}, solution={'head': 'start', 'body': [{'statement': {'head': 'right'}, 'location': 1}, {'statement': {'head': 'right'}, 'location': 2}, {'statement': {'head': 'fly'}, 'location': 3}, {'statement': {'head': 'fly'}, 'location': 4}]}),
    Task(task_id='one-step-forward', setting={'fields': [[['b', []], ['b', []], ['b', []]], [['k', []], ['k', ['S']], ['k', []]]]}, solution={'head': 'start', 'body': [{'statement': {'head': 'fly'}, 'location': 1}]}),
    Task(task_id='turning-left', setting={'fields': [[['b', ['M']], ['b', []], ['b', []], ['b', ['M']], ['b', []]], [['k', ['A']], ['k', []], ['k', ['M']], ['k', []], ['k', ['A']]], [['k', []], ['k', []], ['k', ['A']], ['k', ['M']], ['k', []]], [['k', ['M']], ['k', []], ['k', ['S']], ['k', []], ['k', ['A']]]]}, solution={'head': 'start', 'body': [{'statement': {'head': 'left'}, 'location': 1}, {'statement': {'head': 'fly'}, 'location': 2}, {'statement': {'head': 'fly'}, 'location': 3}]}),
    Task(task_id='shooting', setting={'fields': [[['b', ['A']], ['b', ['A']], ['b', ['A']], ['b', []], ['b', ['A']]], [['k', ['A']], ['k', []], ['k', ['A']], ['k', ['M']], ['k', ['A']]], [['k', ['A']], ['k', []], ['k', ['A']], ['k', ['M']], ['k', ['A']]], [['k', ['A']], ['k', []], ['k', ['A']], ['k', []], ['k', ['A']]], [['k', ['A']], ['k', []], ['k', []], ['k', []], ['k', ['A']]], [['k', ['A']], ['k', []], ['k', ['S']], ['k', []], ['k', ['A']]]]}, solution={'head': 'start', 'body': [{'statement': {'head': 'right'}, 'location': 1}, {'statement': {'head': 'fly'}, 'location': 2}, {'statement': {'head': 'shoot'}, 'location': 3}, {'statement': {'head': 'shoot'}, 'location': 4}, {'statement': {'head': 'fly'}, 'location': 5}]}),
    Task(task_id='on-yellow-to-left', setting={'actionsLimit': 2, 'fields': [[['b', []], ['b', []], ['b', []], ['b', []], ['b', []]], [['k', []], ['k', ['A']], ['k', ['A']], ['k', ['A']], ['k', ['A']]], [['k', ['A']], ['y', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', ['A']], ['k', ['A']], ['k', ['A']]], [['k', ['A']], ['k', ['A']], ['y', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', ['S']], ['k', []], ['k', []]]]}, solution={'head': 'start', 'body': [{'statement': {'head': 'while', 'body': [{'statement': {'head': 'fly'}, 'location': 2}, {'statement': {'orelse': None, 'head': 'if', 'body': [{'statement': {'head': 'left'}, 'location': 4}], 'test': {'head': 'color', 'comparator': '==', 'value': 'y'}}, 'location': 3}], 'test': {'head': 'color', 'comparator': '!=', 'value': 'b'}}, 'location': 1}]}),
    Task(task_id='turning-right-and-left', setting={'fields': [[['b', []], ['b', ['M']], ['b', []], ['b', ['M']], ['b', ['A']]], [['k', []], ['k', ['A']], ['k', ['A']], ['k', []], ['k', ['M']]], [['k', ['A']], ['k', ['M']], ['k', []], ['k', ['M']], ['k', ['A']]], [['k', ['M']], ['k', []], ['k', ['S']], ['k', ['M']], ['k', []]]]}, solution={'head': 'start', 'body': [{'statement': {'head': 'fly'}, 'location': 1}, {'statement': {'head': 'right'}, 'location': 2}, {'statement': {'head': 'left'}, 'location': 3}]}),
    Task(task_id='three-steps-forward', setting={'fields': [[['b', []], ['b', []], ['b', []], ['b', []], ['b', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', []], ['k', []], ['k', []]], [['k', []], ['k', []], ['k', ['S']], ['k', []], ['k', []]]]}, solution={'head': 'start', 'body': [{'statement': {'head': 'fly'}, 'location': 1}, {'statement': {'head': 'fly'}, 'location': 2}, {'statement': {'head': 'fly'}, 'location': 3}]}),
    Task(task_id='turning-left-and-right', setting={'fields': [[['b', []], ['b', ['M']], ['b', []], ['b', ['M']], ['b', []]], [['k', ['M']], ['k', ['A']], ['k', []], ['k', ['A']], ['k', []]], [['k', ['A']], ['k', []], ['k', ['A']], ['k', ['M']], ['k', ['A']]], [['k', []], ['k', ['M']], ['k', ['S']], ['k', []], ['k', ['M']]]]}, solution={'head': 'start', 'body': [{'statement': {'head': 'left'}, 'location': 1}, {'statement': {'head': 'right'}, 'location': 2}, {'statement': {'head': 'fly'}, 'location': 3}]}),
    Task(task_id='zig-zag', setting={'actionsLimit': 2, 'fields': [[['b', []], ['b', []], ['b', []], ['b', []], ['b', []]], [['k', ['A']], ['k', []], ['k', ['A']], ['k', []], ['k', ['A']]], [['k', []], ['k', ['A']], ['k', []], ['k', ['A']], ['k', []]], [['k', ['A']], ['k', []], ['k', ['A']], ['k', []], ['k', ['A']]], [['k', []], ['k', ['A']], ['k', []], ['k', ['A']], ['k', []]], [['k', ['A']], ['k', []], ['k', ['A']], ['k', []], ['k', ['A']]], [['k', []], ['k', ['A']], ['k', []], ['k', ['A']], ['k', []]], [['k', ['A']], ['k', []], ['k', ['A']], ['k', []], ['k', ['A']]], [['k', []], ['k', []], ['k', ['S']], ['k', []], ['k', []]]]}, solution={'head': 'start', 'body': [{'statement': {'head': 'while', 'body': [{'statement': {'head': 'right'}, 'location': 2}, {'statement': {'head': 'left'}, 'location': 3}], 'test': {'head': 'color', 'comparator': '!=', 'value': 'b'}}, 'location': 1}]}),
    Task(task_id='turning-right', setting={'fields': [[['b', []], ['b', ['M']], ['b', []], ['b', []], ['b', ['M']]], [['k', ['A']], ['k', []], ['k', ['M']], ['k', []], ['k', ['A']]], [['k', []], ['k', ['M']], ['k', ['A']], ['k', []], ['k', []]], [['k', ['A']], ['k', []], ['k', ['S']], ['k', []], ['k', ['M']]]]}, solution={'head': 'start', 'body': [{'statement': {'head': 'right'}, 'location': 1}, {'statement': {'head': 'fly'}, 'location': 2}, {'statement': {'head': 'fly'}, 'location': 3}]}),
    Task(task_id='shot', setting={'fields': [[['b', []], ['b', ['A']], ['b', []], ['b', ['A']], ['b', []]], [['k', []], ['k', ['A']], ['k', ['M']], ['k', ['A']], ['k', []]], [['k', []], ['k', ['A']], ['k', []], ['k', ['A']], ['k', []]], [['k', []], ['k', ['A']], ['k', ['S']], ['k', ['A']], ['k', []]]]}, solution={'head': 'start', 'body': [{'statement': {'head': 'fly'}, 'location': 1}, {'statement': {'head': 'shoot'}, 'location': 2}, {'statement': {'head': 'fly'}, 'location': 3}]}),
)